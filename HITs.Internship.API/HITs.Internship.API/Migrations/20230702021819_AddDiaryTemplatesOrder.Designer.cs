// <auto-generated />
using System;
using HITs.Internship.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HITs.Internship.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230702021819_AddDiaryTemplatesOrder")]
    partial class AddDiaryTemplatesOrder
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HITs.Internship.API.Data.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("integer");

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("InternshipId")
                        .HasColumnType("integer");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("InternshipId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("HITs.Internship.API.Data.DiaryTemplate", b =>
                {
                    b.Property<int>("Semester")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Semester"));

                    b.Property<byte[]>("File")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("Order")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Semester");

                    b.ToTable("DiaryTemplates");
                });

            modelBuilder.Entity("HITs.Internship.API.Data.Internship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Characteristic")
                        .HasColumnType("text");

                    b.Property<int>("CompanyId")
                        .HasColumnType("integer");

                    b.Property<byte[]>("Diary")
                        .HasColumnType("bytea");

                    b.Property<int>("InternId")
                        .HasColumnType("integer");

                    b.Property<double?>("Mark")
                        .HasColumnType("double precision");

                    b.Property<int>("Semester")
                        .HasColumnType("integer");

                    b.Property<int>("StudyYear")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Internships");
                });

            modelBuilder.Entity("HITs.Internship.API.Data.Comment", b =>
                {
                    b.HasOne("HITs.Internship.API.Data.Internship", "Internship")
                        .WithMany("DiaryComments")
                        .HasForeignKey("InternshipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Internship");
                });

            modelBuilder.Entity("HITs.Internship.API.Data.Internship", b =>
                {
                    b.Navigation("DiaryComments");
                });
#pragma warning restore 612, 618
        }
    }
}
